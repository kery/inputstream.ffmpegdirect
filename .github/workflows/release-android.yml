name: Release for Android

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+-[0-9]+

jobs:
  build:
    name: Build for host ${{ matrix.host }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - host: aarch64-linux-android
            platform: android-aarch64
          - host: arm-linux-androideabi
            platform: android-armv7
    steps:
    - name: Install the required packages
      run: sudo apt -y install autoconf bison build-essential curl default-jdk flex gawk git gperf lib32stdc++6 lib32z1 lib32z1-dev libcurl4-openssl-dev unzip zip zlib1g-dev

    - name: Cache Android SDK and NDK
      id: cache-android-sdkndk
      uses: actions/cache@v3
      with:
        path: /tmp/android-tools
        key: sdk-6200805_ndk-r21e

    - name: Install Android SDK and NDK
      if: steps.cache-android-sdkndk.outputs.cache-hit != 'true'
      run: |
        curl -LO https://dl.google.com/android/repository/commandlinetools-linux-6200805_latest.zip
        mkdir -p /tmp/android-tools/android-sdk-linux
        unzip commandlinetools-linux-6200805_latest.zip -d /tmp/android-tools/android-sdk-linux/
        curl -LO https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
        unzip android-ndk-r21e-linux-x86_64.zip -d /tmp/android-tools/

    - name: Configure Android SDK
      if: steps.cache-android-sdkndk.outputs.cache-hit != 'true'
      run: |
        cd /tmp/android-tools/android-sdk-linux/tools/bin
        ./sdkmanager --sdk_root=$(pwd)/../.. --licenses
        ./sdkmanager --sdk_root=$(pwd)/../.. platform-tools
        ./sdkmanager --sdk_root=$(pwd)/../.. "platforms;android-33"
        ./sdkmanager --sdk_root=$(pwd)/../.. "build-tools;30.0.3"

    - name: Create a key to sign debug APKs
      run: keytool -genkey -keystore ~/.android/debug.keystore -v -alias androiddebugkey -dname "CN=Android Debug,O=Android,C=US" -keypass android -storepass android -keyalg RSA -keysize 2048 -validity 10000

    - name: Get Kodi source code
      run: |
        git clone https://github.com/xbmc/xbmc /tmp/kodi
        echo "binary-addons https://github.com/kery/kodi-repo-binary-addons.git TosTtl" > /tmp/kodi/cmake/addons/bootstrap/repositories/binary-addons.txt

    - name: Build tools and dependencies
      run: |
        cd /tmp/kodi/tools/depends
        ./bootstrap
        ./configure --host=${{ matrix.host }} --with-sdk-path=/tmp/android-tools/android-sdk-linux --with-ndk-path=/tmp/android-tools/android-ndk-r21e --with-tarballs=/tmp/xbmc-tarballs --prefix=/tmp/xbmc-depends --enable-debug=no
        make -j$(getconf _NPROCESSORS_ONLN)

    - name: Build inputstream.ffmpegdirect
      run: |
        cd /tmp/kodi
        make -j$(getconf _NPROCESSORS_ONLN) -C tools/depends/target/binary-addons ADDONS="inputstream.ffmpegdirect"

    - name: Zip inputstream.ffmpegdirect
      run: |
        cd /tmp/xbmc-depends
        cd $(ls -d ${{ matrix.host }}*)/share/kodi/addons/
        cp ../../../lib/kodi/addons/inputstream.ffmpegdirect/libinputstream.ffmpegdirect.so inputstream.ffmpegdirect/
        sed -i "s/version=\".*\"/version=\"$(echo ${{ github.ref_name }} | cut -c 2-)\"/" inputstream.ffmpegdirect/addon.xml
        zip -r /tmp/inputstream.ffmpegdirect.zip inputstream.ffmpegdirect/

    - name: Upload to release
      uses: svenstaro/upload-release-action@v2
      with:
        file: /tmp/inputstream.ffmpegdirect.zip
        asset_name: inputstream.ffmpegdirect-$tag-${{ matrix.platform }}.zip